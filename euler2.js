// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

//For all of thes possible solutions, I've given the example of 90 as the value not to be exceeded, if you put in 4000000, the functions return 4613732

function fibonacciSumOfEvenTerms (valueNotToExceed) {
	var fibonacciArray = [1, 2];
	while (fibonacciArray[fibonacciArray.length-1] <= valueNotToExceed) {
		var additionFibNum = fibonacciArray[fibonacciArray.length-1] + fibonacciArray[fibonacciArray.length-2];
		fibonacciArray.push(additionFibNum);
	}
	fibonacciArray.pop();
	var sumEvenTerms = 0;
	for (var i = 0; i < fibonacciArray.length; i++) {
		if (fibonacciArray[i] % 2 === 0) {
		sumEvenTerms += fibonacciArray[i];
		}
	}
	return sumEvenTerms;
}

fibonacciSumOfEvenTerms(90);
//returns 44

//Or, using map:
function fibonacciSumOfEvenTerms (valueNotToExceed) {
	var fibonacciArray = [1, 2];
	while (fibonacciArray[fibonacciArray.length-1] <= valueNotToExceed) {
		var additionFibNum = fibonacciArray[fibonacciArray.length-1] + fibonacciArray[fibonacciArray.length-2];
		fibonacciArray.push(additionFibNum);
	}
	fibonacciArray.pop();
	var sumEvenTerms = 0;
	fibonacciArray.map(function(num) {
		if (num % 2 === 0) {
			sumEvenTerms += num;
		}
	})
	return sumEvenTerms;
}

fibonacciSumOfEvenTerms(90);
//returns 44;

//Or using filter and reduce:
function isEven (num) {
	if (num % 2 === 0) {
		return num;
	}
}

function fibonacciSumOfEvenTerms (valueNotToExceed) {
	var fibonacciArray = [1, 2];
	while (fibonacciArray[fibonacciArray.length-1] <= valueNotToExceed) {
		var additionFibNum = fibonacciArray[fibonacciArray.length-1] + fibonacciArray[fibonacciArray.length-2];
		fibonacciArray.push(additionFibNum);
	}
	fibonacciArray.pop();
	var evenValueArray = fibonacciArray.filter(isEven);
	var sum = evenValueArray.reduce((acc, curr) => acc + curr, 0);
	return sum;
}

fibonacciSumOfEvenTerms(90);
//returns 44
